install.packages("carData")
library ("carData")
install.packages('dplyr')
library('dplyr')
pokemon <- read.csv('pokemon.csv', stringsAsFactors = FALSE)
pokemon <- read.csv('pokemon.csv.webarchieve', stringsAsFactors = FALSE)
pokemon <- read.csv('pokemon.csv.web archieve', stringsAsFactors = FALSE)
pokemon <- read.csv('pokemon.web archieve', stringsAsFactors = FALSE)
pokemon <- read.csv('pokemon.webarchieve', stringsAsFactors = FALSE)
pokemon <- read.csv("pokemon.webarchieve", stringsAsFactors = FALSE)
pokemon <- read.csv("pokemon.csv", stringsAsFactors = FALSE)
install.packages('dplyr')
library('dplyr')
pokemon <- read.csv("pokemon.csv", stringsAsFactors = FALSE)
install.packages("dplyr")
pokemon <- read.csv("pokemon.csv", stringsAsFactors = FALSE)
pokemon <- read.csv('pokemon.csv', stringsAsFactors = FALSE)
pokemon <- read.csv('pokemon.csv', stringsAsFactors = FALSE)
pokemon <- read.csv('pokemon.csv', stringsAsFactors = FALSE)
pokemon <- read.csv('pokemon.numbers', stringsAsFactors = FALSE)
pokemon <- read.numbers('pokemon.numbers', stringsAsFactors = FALSE)
library(readr)
pokemon <- read_csv("OneDrive/Documents/201/R/pokemon.csv")
View(pokemon)
pokemon <- read.csv('pokemon.csv', stringsAsFactors = FALSE)
bug_pokemon <- pokemon[pokemon$Type.1 == "Bug", ]
bug_pokemon <- filter(pokemon, Tppe.1 == "Bug")
View(bug_pokemon)
bug_pokemon_selected <- select(bug_pokemon, Name, Type.1)
View(bug_pokemon_selected)
fire_pokemon <- filter(pokemon, Type.1 == 'Fire')
View(fire_pokemon)
strong_fire_pokemon <- filter(fire_pokemon, Attack > 100)
View(strong_fire_pokemon)
strong_fire_pokemon_reduced <- select(strong_fire_pokemon, Name, Type.1, Attack)
energy <- read.csv('energy.csv', stringsAsFactors = FALSE)
energy <- read.csv('energy.csv', stringsAsFactors = FALSE)
energy <- read.csv('energy.csv', stringsAsFactors = FALSE)
install.packages("nycflights13")
library('nycflights13')
install.packages("pscl")
library('pscl')
detach("package:nycflights13", unload = TRUE)
library(nycflights13)
install.packages('ggplot2')
library('ggplot2')
df <- read.csv("./data/shootings-2018.csv", stringsAsFactors = FALSE)
library(dplyr)
library(ggplot2)
library(plotly)
library("stringr")
df <- read.csv("./data/shootings-2018.csv", stringsAsFactors = FALSE)
View(df)
#Summary Table
summary_table <- df %>%
select(city, num_killed, num_injured) %>%
group_by(city) %>%
summarize(deaths = sum(num_killed),
injuries = sum(num_injured),
shooting = n())
View(summary_table)
#Interactive Map
most_impacted <- df %>%
group_by(city) %>%
summarize(num_impacted = sum(num_killed + num_injured)) %>%
arrange(-num_impacted) %>%
filter(num_impacted == max(num_impacted))
df <- mutate(df, num_impacted = (num_killed + num_injured))
# geo styling
geo <- list(
scope = 'usa',
showland = TRUE,
landcolor = toRGB("gray95"),
countrycolor = toRGB("gray80")
)
p <- plot_geo(df, lat = ~lat, lon = ~long) %>%
add_markers(
text = ~paste("State: ", state, "<br />", "City: ", city,  "<br />",
"Number of deaths: ", num_killed, "<br />",
"Number of injured: ", num_injured),
colors = c("yellow", "orange" , "red", "red3", "red4"),
color = ~num_impacted, symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~num_impacted)) %>%
colorbar(title = "Numbebr of victims") %>%
layout( title = 'Shooting incidents in the U.S.<br />(Hover for info)', geo = geo)
print(p)
#plot state shootings
state_shooting <- ggplot(data = df, mapping = aes(state, num_killed)) +
geom_col() +
labs(
title = "Number of Shooting in Each State in 2018",
x = "State in 2018",
y = "Number of Shootings in 2018") +
theme_bw() +
theme(axis.text.x = element_text(colour = "grey20", size = 10, angle = 90,
hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 10),
text = element_text(size = 12))
print(state_shooting)
df <- read.csv("./data/shootings-2018.csv", stringsAsFactors = FALSE)
View(df)
#Summary Table
summary_table <- df %>%
select(city, num_killed, num_injured) %>%
group_by(city) %>%
summarize(deaths = sum(num_killed),
injuries = sum(num_injured),
shooting = n())
View(summary_table)
df <- read.csv("./data/shootings-2018.csv", stringsAsFactors = FALSE)
View(df)
df <- read.csv("./data/shootings-2018.csv", stringsAsFactors = FALSE)
View(df)
source("analysis.R")
state_shooting <- ggplot(data = df, mapping = aes(state, num_killed)) +
geom_col() +
labs(
title = "Number of Shooting in Each State in 2018",
x = "State in 2018",
y = "Number of Shootings in 2018") +
theme_bw() +
theme(axis.text.x = element_text(colour = "grey20", size = 10, angle = 90,
hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 10),
text = element_text(size = 12))
print(state_shooting)
p <- plot_geo(df, lat = ~lat, lon = ~long) %>%
add_markers(
text = ~paste("State: ", state, "<br />", "City: ", city,  "<br />",
"Number of deaths: ", num_killed, "<br />",
"Number of injured: ", num_injured),
colors = c("yellow", "orange" , "red", "red3", "red4"),
color = ~num_impacted, symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~num_impacted)) %>%
colorbar(title = "Numbebr of victims") %>%
layout( title = 'Shooting incidents in the U.S.<br />(Hover for info)', geo = geo)
print(p)
geo <- list(
scope = 'usa',
showland = TRUE,
landcolor = toRGB("gray95"),
countrycolor = toRGB("gray80")
)
most_impacted <- df %>%
group_by(city) %>%
summarize(num_impacted = sum(num_killed + num_injured)) %>%
arrange(-num_impacted) %>%
filter(num_impacted == max(num_impacted))
df <- mutate(df, num_impacted = (num_killed + num_injured))
summary_table <- df %>%
select(city, num_killed, num_injured) %>%
group_by(city) %>%
summarize(deaths = sum(num_killed),
injuries = sum(num_injured),
shooting = n())
View(summary_table)
df <- read.csv("./data/shootings-2018.csv", stringsAsFactors = FALSE)
View(df)
source("analysis.R")
library("plotly")
```{r plot, echo=FALSE}
source("analysis.R")
library("plotly")
state_shooting <- ggplot(data = df, mapping = aes(state, num_killed)) +
geom_col() +
labs(
title = "Number of Shooting in Each State in 2018",
x = "State in 2018",
y = "Number of Shootings in 2018") +
theme_bw() +
theme(axis.text.x = element_text(colour = "grey20", size = 10, angle = 90,
hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 10),
text = element_text(size = 12))
print(state_shooting)
source("analysis.R")
#plot state shootings
state_shooting <- ggplot(data = df, mapping = aes(state, num_killed)) +
geom_col() +
labs(
title = "Number of Shooting in Each State in 2018",
x = "State in 2018",
y = "Number of Shootings in 2018") +
theme_bw() +
theme(axis.text.x = element_text(colour = "grey20", size = 10, angle = 90,
hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 10),
text = element_text(size = 12))
print(state_shooting)
library(dplyr)
library(ggplot2)
library(plotly)
library(stringr)
library(lintr)
df <- read.csv("./data/shootings-2018.csv", stringsAsFactors = FALSE)
View(df)
#Summary Info
total_shootings <- nrow(shootings)
total_killed <- sum(shootings$num_killed)
total_injured <- sum(shootings$num_injured)
most_impacted <- shootings %>%
group_by(city) %>%
summarize(num_impacted = sum(num_killed + num_injured)) %>%
arrange(-num_impacted) %>%
filter(num_impacted == max(num_impacted))
shootings <- mutate(shootings, num_impacted = (num_killed + num_injured))
total_impacted <- sum(shootings$num_impacted)
#Summary Table
summary_table <- df %>%
select(city, num_killed, num_injured) %>%
group_by(city) %>%
summarize(deaths = sum(num_killed),
injuries = sum(num_injured),
shooting = n())
View(summary_table)
#Description of Particular Incident
#Interactive Map
most_impacted <- df %>%
group_by(city) %>%
summarize(num_impacted = sum(num_killed + num_injured)) %>%
arrange(-num_impacted) %>%
filter(num_impacted == max(num_impacted))
df <- mutate(df, num_impacted = (num_killed + num_injured))
# geo styling
geo <- list(
scope = 'usa',
showland = TRUE,
landcolor = toRGB("gray95"),
countrycolor = toRGB("gray80")
)
map_shooting <- plot_geo(df, lat = ~lat, lon = ~long) %>%
add_markers(
text = ~paste("State: ", state, "<br />", "City: ", city,  "<br />",
"Number of deaths: ", num_killed, "<br />",
"Number of injured: ", num_injured),
colors = c("yellow", "orange" , "red", "red3", "red4"),
color = ~num_impacted, symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~num_impacted)) %>%
colorbar(title = "Numbebr of victims") %>%
layout( title = 'Shooting incidents in the U.S.<br />(Hover for info)', geo = geo)
print(map_shooting)
#plot state shootings
state_shooting <- ggplot(data = df, mapping = aes(state, num_killed)) +
geom_col() +
labs(
title = "Number of Shooting in Each State in 2018",
x = "State in 2018",
y = "Number of Shootings in 2018") +
theme_bw() +
theme(axis.text.x = element_text(colour = "grey20", size = 10, angle = 90,
hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 10),
text = element_text(size = 12))
print(state_shooting)
Santa_Fe <- shootings %>%
filter(city == "Santa Fe") %>%
View()
Santa_Fe <- df %>%
filter(city == "Santa Fe") %>%
View()
lintr:::addin_lint_package()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
install.packages("httr")
install.packages("jsonlite")
library("httr")
library("jsonlite")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("dplyr")
library("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
rep_by_state <- function(state) {
base_url <- "https://api.propublica.org/congress/v1/members/house/"
end_point <- paste0(base_url, state, "/current.json")
response <- GET(endpoint, add_headers("X-API-Key" = propublicakey))
content <- content(response, "text")
data <- fromJSON(content)
return(data)
}
test1 <- rep_by_state("WA")
#https://api.propublica.org/congress/v1/members/house/{state}/current.json
install.packages("shiny")
library("shiny")
install.packages("httr")
library("httr")
install.packages("httr")
install.packages("jsonlite")
library("jsonlite")
install.packages("jsonlite")
#https://api.propublica.org/congress/v1/members/house/{state}/current.json
rep_by_state <- function(state) {
base_url <- "https://api.propublica.org/congress/v1/members/house/"
end_point <- paste0(base_url, state, "/current.json")
response <- GET(endpoint, add_headers("X-API-Key" = propublicakey))
content <- content(response, "text")
data <- fromJSON(content)
return(data)
}
test1 <- rep_by_state("WA")
#https://api.propublica.org/congress/v1/members/house/{state}/current.json
rep_by_state <- function(state) {
base_url <- "https://api.propublica.org/congress/v1/members/house/"
end_point <- paste0(base_url, state, "/current.json")
response <- GET(endpoint, add_headers("X-API-Key" = propublicakey))
content <- content(response, "text")
data <- fromJSON(content)
return(data)
}
test1 <- rep_by_state("WA")
rep_by_state <- function(state) {
base_url <- "https://api.propublica.org/congress/v1/members/house/"
end_point <- paste0(base_url, state, "/current.json")
response <- GET(endpoint, add_headers("X-API-Key" = propublica_key))
content <- content(response, "text")
data <- fromJSON(content)
return(data)
}
test1 <- rep_by_state("WA")
rep_by_state <- function(state) {
base_url <- "https://api.propublica.org/congress/v1/members/house/"
end_point <- paste0(base_url, state, "/current.json")
response <- GET(endpoint, add_headers("X-API-Key" = propublica_key))
content <- content(response, "text")
data <- fromJSON(content)
return(data)
}
test1 <- rep_by_state("WA")
rep_by_state <- function(state) {
base_url <- "https://api.propublica.org/congress/v1/members/house/"
end_point <- paste0(base_url, state, "/current.json")
response <- GET(endpoint, add_headers("X-API-Key" = propublica_key))
content <- content(response, "text")
data <- fromJSON(content)
return(data$results)
}
test1 <- rep_by_state("WA")
library("httr")
library("jsonlite")
library("dplyr")
source("api_key.R")
#https://api.propublica.org/congress/v1/members/{state}/current.json
rep_by_state <- function(state) {
base_url <- "https://api.propublica.org/congress/v1/members/house/"
end_point <- paste0(base_url, state, "/current.json")
response <- GET(endpoint, add_headers("X-API-Key" = propublica_key))
content <- content(response, "text")
data <- fromJSON(content)
return(data$results)
}
test1 <- rep_by_state("WA")
library("httr")
library("jsonlite")
library("dplyr")
source("api_key.R")
#https://api.propublica.org/congress/v1/members/{state}/current.json
rep_by_state <- function(state) {
base_url <- "https://api.propublica.org/congress/v1/members/house/"
end_point <- paste0(base_url, state, "/current.json")
response <- GET(endpoint, add_headers("X-API-Key" = propublica.key))
content <- content(response, "text")
data <- fromJSON(content)
return(data$results)
}
test1 <- rep_by_state("WA")
rep_by_state <- function(state) {
base_url <- "https://api.propublica.org/congress/v1/members/house/"
end_point <- paste0(base_url, state, "/current.json")
response <- GET(endpoint, add_headers("X-API-Key" = propublica.key))
content <- content(response, "text")
data <- fromJSON(content)
return(data$results)
}
test1 <- rep_by_state("WA")
rep_by_state <- function(state) {
base_url <- "https://api.propublica.org/congress/v1/members/house/"
end_point <- paste0(base_url, state, "/current.json")
response <- GET(end_point, add_headers("X-API-Key" = propublica.key))
content <- content(response, "text")
data <- fromJSON(content)
return(data$results)
}
test1 <- rep_by_state("WA")
source("api_key.R")
#https://api.propublica.org/congress/v1/members/{state}/current.json
rep_by_state <- function(state) {
base_url <- "https://api.propublica.org/congress/v1/members/house/"
end_point <- paste0(base_url, state, "/current.json")
response <- GET(end_point, add_headers("X-API-Key" = propublica.key))
content <- content(response, "text")
data <- fromJSON(content)
return(data$results)
}
test1 <- rep_by_state("WA")
propublica.key <- "WDVTPsYL9H7AQaiWiOago3TGfKNdGhq4cZzD6FRe"
library("httr")
library("jsonlite")
library("dplyr")
source("api_key.R")
#https://api.propublica.org/congress/v1/members/{state}/current.json
rep_by_state <- function(state) {
base_url <- "https://api.propublica.org/congress/v1/members/house/"
end_point <- paste0(base_url, state, "/current.json")
response <- GET(end_point, add_headers("X-API-Key" = propublica.key))
content <- content(response, "text")
data <- fromJSON(content)
return(data$results)
}
test1 <- rep_by_state("WA")
View(test1)
source("api_key.R")
#https://api.propublica.org/congress/v1/members/{state}/current.json
rep_by_state <- function(state) {
base_url <- "https://api.propublica.org/congress/v1/members/house/"
end_point <- paste0(base_url, state, "/current.json")
response <- GET(end_point, add_headers("X-API-Key" = propublica.key))
content <- content(response, "text")
data <- fromJSON(content)
return(data$results)
}
test1 <- rep_by_state("WA")
stats <- stats_df %>%
select(`Start Year`, `FG%`, `3P%`, `FT%`, TOV, RPG, APG, PPG) %>%
View()
attendance <- attendance_df %>%
select(`Starting Year`, Team, `Home: Avg Attendance`) %>%
View()
install.packages("dplyr")
install.packages("dplyr")
library("readxl")
library("ggplot2")
library("dplyr")
select(`Starting Year`, Team, `Home: Avg Attendance`) %>%
View()
attendance <- attendance_df %>%
select(`Start Year`, Team, `Home: Avg Attendance`) %>%
View()
View(attendance_df)
stats <- stats_df %>%
select(`Start Year`, `FG%`, `3P%`, `FT%`, TOV, RPG, APG, PPG) %>%
View()
stats_df <- read_xlsx("data/nba_team_stats.xlsx")
attendance_df <- read_xlsx("data/NBA Team Annual Attendance.xlsx")
wins_df <- read.xlsx("data/")
stats_df <- read_xlsx("data/nba_team_stats.xlsx")
attendance_df <- read_xlsx("data/NBA Team Annual Attendance.xlsx")
library("readxl")
library("ggplot2")
library("dplyr")
stats_df <- read_xlsx("data/nba_team_stats.xlsx")
stats_df <- read_xlsx("data/nba_team_stats.xlsx")
View(stats_df)
View(attendance_df)
library("readxl")
library("ggplot2")
library("dplyr")
stats_df <- read_xlsx("data/nba_team_stats.xlsx")
attendance_df <- read_xlsx("data/NBA Team Annual Attendance.xlsx")
tats_df <- read_xlsx("data/nba_team_stats.xlsx")
attendance_df <- read_xlsx("data/NBA Team Annual Attendance.xlsx")
stats_df <- read_xlsx("data/nba_team_stats.xlsx")
attendance_df <- read_xlsx("data/NBA Team Annual Attendance.xlsx")
stats_df <- read_xlsx("data/nba_team_stats.xlsx")
attendance_df <- read_xlsx("data/NBA Team Annual Attendance.xlsx")
setwd("~/OneDrive/Documents/201/INFO-201-Group-1")
stats_df <- read_xlsx("data/nba_team_stats.xlsx")
attendance_df <- read_xlsx("data/NBA Team Annual Attendance.xlsx")
setwd("~/OneDrive/Documents/201/INFO-201-Group-1")
stats_df <- read_xlsx("data/nba_team_stats.xlsx")
attendance_df <- read_xlsx("data/NBA Team Annual Attendance.xlsx")
stats_df <- read_xlsx("data/nba_team_stats.xlsx")
attendance_df <- read_xlsx("data/NBA Team Annual Attendance.xlsx")
View(stats_df)
View(attendance_df)
stats_df <- read_xlsx("data/nba_team_stats.xlsx")
attendance_df <- read_xlsx("data/NBA Team Annual Attendance.xlsx")
library("readxl")
library("ggplot2")
library("dplyr")
stats_df <- read_xlsx("data/nba_team_stats.xlsx")
attendance_df <- read_xlsx("data/NBA Team Annual Attendance.xlsx")
View(stats_df)
View(attendance_df)
stats <- stats_df %>%
select(`Start Year`, `FG%`, `3P%`, `FT%`, TOV, RPG, APG, PPG) %>%
View()
df_new <- full_join(attendance_df, stats_df, by = "Start Year")
View(df_new)
